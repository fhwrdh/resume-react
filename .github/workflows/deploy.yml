name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build
      
    - name: Generate Resume Formats
      run: |
        # Generate TXT, MD, JSON formats
        node scripts/generateFormats.js

        # Install Puppeteer
        npm install puppeteer

        # Generate PDF using Puppeteer (with --no-sandbox for CI)
        node -e "
        import('puppeteer').then(async (puppeteer) => {
          const browser = await puppeteer.default.launch({
            args: ['--no-sandbox', '--disable-setuid-sandbox']
          });
          const page = await browser.newPage();
          await page.goto('file://' + process.cwd() + '/dist/index.html', {waitUntil: 'networkidle0'});
          await page.pdf({
            path: './dist/franklin.henderson.pdf',
            format: 'A4',
            printBackground: true,
            margin: { top: '0.5in', right: '0.5in', bottom: '0.5in', left: '0.5in' }
          });
          await browser.close();
          console.log('âœ… Generated PDF format');
        });
        "

        # Try to generate DOCX (if pandoc available)
        sudo apt-get update && sudo apt-get install -y pandoc || echo "Pandoc installation failed"
        node scripts/generateDocx.js || echo "DOCX generation skipped"
      
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist